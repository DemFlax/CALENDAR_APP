rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isManager() {
      return isAuthenticated() && request.auth.token.role == "manager";
    }
    
    function isGuide() {
      return isAuthenticated() && request.auth.token.role == "guide";
    }
    
    function isOwnerGuide(guideId) {
      return isAuthenticated() && request.auth.token.guideId == guideId;
    }
    
    match /guides/{guideId} {
      allow read: if isManager() || isOwnerGuide(guideId);
      allow create: if isManager();
      allow update: if isManager();
      allow delete: if false;
      
      match /shifts/{shiftId} {
        allow read: if isManager() || isOwnerGuide(guideId);
        allow create: if false;
        
        allow update: if (isManager() && 
                         ((resource.data.estado == 'LIBRE' && request.resource.data.estado == 'ASIGNADO') ||
                          (resource.data.estado == 'ASIGNADO' && request.resource.data.estado == 'LIBRE'))) ||
                         (isOwnerGuide(guideId) &&
                         ((resource.data.estado == 'LIBRE' && request.resource.data.estado == 'NO_DISPONIBLE') ||
                          (resource.data.estado == 'NO_DISPONIBLE' && request.resource.data.estado == 'LIBRE')));
      }
    }
    
    match /notifications/{notificationId} {
      allow read: if isManager();
      allow write: if false;
    }
  }
}