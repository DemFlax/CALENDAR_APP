rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isManager() {
      return isAuthenticated() && request.auth.token.role == "manager";
    }
    
    function isGuide() {
      return isAuthenticated() && request.auth.token.role == "guide";
    }
    
    function isOwnerGuide(guideId) {
      return isAuthenticated() && request.auth.token.guideId == guideId;
    }
    
    // ========================================
    // COLECCIONES EXISTENTES (NO MODIFICADAS)
    // ========================================
    
    match /guides/{guideId} {
      allow read: if isManager() || isOwnerGuide(guideId);
      allow create: if isManager();
      allow update: if isManager();
      allow delete: if false;
      
      match /shifts/{shiftId} {
        allow read: if isManager() || isOwnerGuide(guideId);
        allow create: if false;
        
        allow update: if (isManager() && 
                         ((resource.data.estado == 'LIBRE' && request.resource.data.estado == 'ASIGNADO') ||
                          (resource.data.estado == 'ASIGNADO' && request.resource.data.estado == 'LIBRE'))) ||
                         (isOwnerGuide(guideId) &&
                         ((resource.data.estado == 'LIBRE' && request.resource.data.estado == 'NO_DISPONIBLE') ||
                          (resource.data.estado == 'NO_DISPONIBLE' && request.resource.data.estado == 'LIBRE')));
      }
    }
    
    match /notifications/{notificationId} {
      allow read: if isManager();
      allow write: if false;
    }
    
    // ========================================
    // VENDOR COSTS MODULE - NUEVAS COLECCIONES
    // ========================================
    
    match /vendors/{vendorId} {
      allow read: if isAuthenticated();
      allow create, update: if isManager();
      allow delete: if false;
    }
    
    match /vendor_costs/{vendorCostId} {
      allow read: if isManager() || 
                     (isGuide() && resource.data.guideId == request.auth.token.guideId);
      
      allow create: if isGuide() && 
                       request.resource.data.guideId == request.auth.token.guideId;
      
      allow update: if isManager() ||
                       (isGuide() && 
                        resource.data.guideId == request.auth.token.guideId &&
                        request.time < resource.data.createdAt + duration.value(1, 'd'));
      
      allow delete: if false;
    }
    
    match /guide_invoices/{invoiceId} {
      allow read: if isManager() || 
                     (isGuide() && resource.data.guideId == request.auth.token.guideId);
      
      allow update: if isGuide() && 
                       resource.data.guideId == request.auth.token.guideId &&
                       resource.data.status == "PENDING_APPROVAL" &&
                       request.resource.data.status == "APPROVED";
      
      allow create, delete: if false;
    }
    
    match /vendor_reports/{reportId} {
      allow read: if isManager();
      allow write: if false;
    }
    
    match /config/{docId} {
      allow read: if isAuthenticated();
      allow write: if isManager();
    }
  }
}