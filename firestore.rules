rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isManager() {
      return isAuthenticated() && request.auth.token.role == "manager";
    }
    
    function isGuide() {
      return isAuthenticated() && request.auth.token.role == "guide";
    }
    
    function isOwnerGuide(guideId) {
      return isAuthenticated() && request.auth.token.guideId == guideId;
    }
    
    match /guides/{guideId} {
      allow read: if isManager() || isOwnerGuide(guideId);
      allow create: if isManager();
      allow update: if isManager() &&
                       request.resource.data.email == resource.data.email &&
                       request.resource.data.dni == resource.data.dni;
      allow delete: if false;
    }
    
    match /shifts/{shiftId} {
      allow read: if isManager();
      allow read: if isGuide() && (
        resource.data.guiaId == request.auth.token.guideId ||
        resource.data.estado == 'LIBRE'
      );
      
      allow create: if isManager();
      
      // Manager asigna: LIBRE → ASIGNADO
      allow update: if isManager() &&
                       resource.data.estado == 'LIBRE' &&
                       request.resource.data.estado == 'ASIGNADO';
      
      // Manager libera: ASIGNADO → LIBRE
      allow update: if isManager() &&
                       resource.data.estado == 'ASIGNADO' &&
                       request.resource.data.estado == 'LIBRE';
      
      // Guía bloquea: LIBRE → NO_DISPONIBLE
      allow update: if isGuide() &&
                       resource.data.guiaId == request.auth.token.guideId &&
                       resource.data.estado == 'LIBRE' &&
                       request.resource.data.estado == 'NO_DISPONIBLE' &&
                       request.resource.data.guiaId == request.auth.token.guideId;
      
      // Guía desbloquea: NO_DISPONIBLE → LIBRE
      allow update: if isGuide() &&
                       resource.data.guiaId == request.auth.token.guideId &&
                       resource.data.estado == 'NO_DISPONIBLE' &&
                       request.resource.data.estado == 'LIBRE' &&
                       request.resource.data.guiaId == request.auth.token.guideId;
    }
    
    match /notifications/{notificationId} {
      allow read: if isManager();
      allow write: if false;
    }
  }
}